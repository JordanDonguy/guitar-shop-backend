<!DOCTYPE html>
<html>
<head>
  <title>Filtered Products</title>
  <style>
    .title {
      width: 100%;
      display: inline-flex;
      justify-content: center;
      font-size: 1.4rem;
    }
    body {
      width: 80%;
      margin: 0px 10%;
    }
    .product-card {
      border: 1px solid #ccc;
      border-radius: 12px;
      padding: 20px;
      margin: 20px;
      width: 220px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      display: flex;
      flex-direction: column;
    }
    .product-image {
      width: 200px;
      height: 200px;
      object-fit: cover;
      border-radius: 8px;
      margin-bottom: 15px;
    }
    .description-box {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      height: 175px;
    }
    .product-link {
      color: black;
      text-decoration: none;
      font-size: 0.8rem;
    }
    .product-link h2 {
      margin: 5px 0px;
    }
    .product-name {
      font-weight: 300;
    }
    .product-link:hover {
      text-decoration: underline;
    }
    .ordering-section {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    .availability-price {
      align-items: center;
    }
    .availability {
      font-weight: bold;
    }
    .available {
      color: green;
    }
    .unavailable {
      color: red;
    }
    .price {
      font-weight: bold;
      font-size: 1.2rem
    }
    .add-to-cart {
      padding: 10px 20px;
      float: right;
      background-color: #28a745;
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      cursor: pointer;
    }
    .add-to-cart:hover {
      background-color: #41b75c;
    }
  </style>
</head>
<body>
  <div class="title"><h1>Products</h1></div>
  <div style="display: flex; flex-wrap: wrap; justify-content: center;">
    <% products.forEach(product => { %>
      <div class="product-card">
        <img src="<%= product.image_url %>" alt="<%= product.name %>" class="product-image" />
        <div class="description-box">
          <a href='/products/<%= product.id %>' class="product-link"><h2 class="product-brand"><%= product.brand %></h2><h2 class="product-name"><%= product.name %></h2></a>
          <div><%- product.description_html %></div> <!-- Rendered markdown (as HTML) -->
          <div class="ordering-section">
            <div class="availability-price">
                <div class="availability <%= product.stock > 0 ? 'available' : 'unavailable' %>">
                  <%= product.stock > 0 ? '● Available' : '● Out of stock' %>
                </div>
                <div class="price"><%= product.price %></div>
            </div>
            <form action="/cart/add/<%= product.id %>" method="post" class="add-to-cart-form">
              <button type="submit" 
              class="add-to-cart" 
              name="product_id"
              value="<%= product.id  %>"
              <%= product.stock === 0 ? 'disabled' : '' %>>
                Add to Cart
              </button>
            </form>
          </div>
        </div>
      </div>
    <% }) %>
  </div>
</body>
<script>
  const isAuthenticated = <%= JSON.stringify(isAuthenticated) %>;
  document.addEventListener('DOMContentLoaded', () => {
    const forms = document.querySelectorAll('.add-to-cart-form');
  
    forms.forEach(form => {
      form.addEventListener('submit', function(e) {
        if (!isAuthenticated) {
          e.preventDefault(); // prevent the form from submitting to server
  
          const productId = this.querySelector('button[name="product_id"]').value;
          const productBrand = this.closest('.description-box').querySelector('.product-brand').textContent;
          const productName = this.closest('.description-box').querySelector('.product-name').textContent;
          const imgSrc = this.closest('.product-card').querySelector('.product-image').getAttribute('src');
          const productPrice = this.closest('.product-card').querySelector('.price').textContent;
          
          // Get the cart from localStorage (or create a new one)
          let cart = JSON.parse(localStorage.getItem('cart')) || [];
  
          // Check if product is already in cart
          const existingItem = cart.find(item => item.productId === productId);
  
          if (existingItem) {
            existingItem.quantity += 1;
          } else {
            cart.push({ productId: productId, quantity: 1, brand: productBrand, name: productName, image_url: imgSrc, price: productPrice });
          }
  
          // Save back to localStorage
          localStorage.setItem('cart', JSON.stringify(cart));
  
          // Optionally show an alert
          alert('Item added to cart!');
        }
        // Else, if user is logged in, allow form to submit normally
      });
    });
  });
</script>
</html>